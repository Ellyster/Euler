/************************************************************************************************************************************************
 * Problem 2 - Even Fibonacci numbers																											*
 *																																				*
 *                                    																											*
 * 																																				*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:	*
 * 																																				*
 *                                     				1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...														*
 *                                         																										*
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.			*
 *																																				*
 *																																		  		*
 * 																																		   		*
 * Author: Alonso J. Gragera Aguaza																												*
 * Date: 6/11/2012																																*
 ************************************************************************************************************************************************/


#include<iostream>

using namespace std;

int EvenFibonacciSum(int n)
{
	int n_0 = 1;
	int n_1 = 2;

	int sum = 0;

	int fib = 2;

	while(fib <= n) {
		if (fib%2 == 0)
			sum += fib;

	    fib = n_0 + n_1;
	    n_0 = n_1;
	    n_1 = fib;
	}

	return sum;
}


int main(int argc, char const *argv[])
{
	int sum;

	sum = EvenFibonacciSum(4000000);

	cout << "The sum is: " << sum << endl;
	return 0;
}